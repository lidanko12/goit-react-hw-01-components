{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/Friends/Friends.module.css","components/Transaction/Transaction.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/Friends/FriendsList.jsx","components/Transaction/Transaction.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","description","src","alt","item","label","quantity","followers","views","likes","defaultProps","getRandomInt","max","Math","floor","random","Statistics","title","statistics","map","id","percentage","backgroundColor","FriendsListItem","isOnline","online","offline","width","FriensdList","friends","TransactionHistory","items","type","amount","currency","slice","toUpperCase","App","user","statisticalData","FriendsList","Transaction","transaction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ddaf88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2Nbo4\",\"description\":\"profile_description__3CyVI\",\"avatar\":\"profile_avatar__2Ubwg\",\"name\":\"profile_name__2CyX2\",\"tag\":\"profile_tag__15yAq\",\"location\":\"profile_location__VfU2p\",\"stats\":\"profile_stats__1p3sP\",\"item\":\"profile_item__3CMLu\",\"quantity\":\"profile_quantity__3fy9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1jdOw\",\"title\":\"Statistics_title__3ctJz\",\"stat-list\":\"Statistics_stat-list__mRADm\",\"item\":\"Statistics_item__1DPqd\",\"label\":\"Statistics_label__1VoVd\",\"percentage\":\"Statistics_percentage__1PztY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3vS5U\",\"status\":\"FriendListItem_status__1-7u4\",\"avatar\":\"FriendListItem_avatar__1hlUw\",\"name\":\"FriendListItem_name__3B-km\",\"online\":\"FriendListItem_online__1xqRi FriendListItem_status__1-7u4\",\"offline\":\"FriendListItem_offline__3KhJS FriendListItem_status__1-7u4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"Friends_friend-list__FvRba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"Transaction_transaction-history__3PQ_K\"};","import PropTypes from 'prop-types';\r\nimport style from './profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n        \r\n        <div className={style.profile}>\r\n            <div className={style.description}>\r\n                <img className ={style.avatar}\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                   \r\n                />\r\n                <p className={style.name}>{name}</p>\r\n                <p className={style.tag}>@{tag}</p>\r\n                <p className={style.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={style.stats}>\r\n                <li className = {style.item}>\r\n                    <span className={style.label}>Followers</span>\r\n                    <span className={style.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li className = {style.item}>\r\n                    <span className={style.label}>Views</span>\r\n                    <span className={style.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li className = {style.item}>\r\n                    <span className={style.label}>Likes</span>\r\n                    <span className={style.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n Profile.defaultProps = {\r\n  avatar: 'https://www.flaticon.com/ru/free-icon/boy_5615699?related_id=5615699&origin=pack',\r\n};\r\nProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object,\r\n}\r\n\r\nexport default Profile\r\n","\r\nimport style from '../Statistics/Statistics.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className={style.statistics}>\r\n            {title && <h2 className={style.title}>{title}</h2>}\r\n\r\n            <ul className={style['stat-list']}>\r\n                {stats.map(({ id, label, percentage }) => (\r\n    <li key ={id} \r\n    className={style.item}\r\n      style ={{ backgroundColor: `rgb(${getRandomInt(255)},${getRandomInt(255)},${getRandomInt(\r\n                255,\r\n              )})`,\r\n\r\n      }}\r\n      >          \r\n    <span className={style.label}>{label}</span>\r\n            <span className={style.percentage}>{percentage}%</span>\r\n          </li>\r\n                ))}\r\n  </ul>\r\n</section>\r\n    \r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.oneOf(['.docx', '.pdf', '.mp3', '.psd']).isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n\r\n\r\nexport default Statistics\r\n","import PropTypes from 'prop-types'\r\nimport style from '../FriendListItem/FriendListItem.module.css'\r\n \r\nfunction FriendsListItem({ avatar, name, isOnline = false }) {\r\n    return (\r\n          <li className={style.item}>\r\n      <span className={isOnline ? style.online : style.offline}></span>\r\n      <img className={style.avatar} src={avatar} alt={`Аватар ${name}`} width=\"48\" />\r\n      <p className={style.name}>{name}</p>\r\n    </li>\r\n    )\r\n}\r\n\r\nFriendsListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n}\r\n\r\n\r\nexport default FriendsListItem;","import style from '../Friends/Friends.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport FriendsListItem from '../FriendListItem/FriendListItem'\r\n\r\n\r\nconst FriensdList = ({ friends }) => {\r\n    return (\r\n        <ul className={style['friend-list']}>\r\n            {friends.map(({ avatar, name, id, isOnline }) => (\r\n                <FriendsListItem key={id} avatar={avatar} name={name} isOnline={isOnline} />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFriensdList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriensdList;\r\n\r\n","import PropTypes from 'prop-types'\r\nimport style from '../Transaction/Transaction.module.css'\r\n\r\n\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <table className={style['transaction-history']}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(({ id, type = '-----', amount = '0', currency = '-----' }) =>\r\n     (        \r\n    <tr key = {id}>\r\n      <td>{type.slice(0,1).toUpperCase()+type.slice(1)}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n          ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n    \r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\n\r\nexport default TransactionHistory;","import user from './components/Profile/user.json'\nimport Profile from './components/Profile/Profile'\nimport Statistics from './components/Statistics/Statistics'\nimport statisticalData from './components/Statistics/statistical-data.json'\nimport friends from './components/Friends/friends.json'\nimport FriendsList from './components/Friends/FriendsList'\nimport transaction from './components/Transaction/Transactions.json'\nimport TransactionHistory from './components/Transaction/Transaction'\n\n\n\n\nexport default function App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n       <Statistics title={'upload stats'} stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendsList friends={friends} />,\n      <TransactionHistory items={transaction} />,\n    </>\n  );\n}\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}